// <auto-generated />
using System;
using HomeProject.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeProject.Migrations
{
    [DbContext(typeof(TasksDBContext))]
    [Migration("20210311071634_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeProject.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateBirth = new DateTime(1996, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Директор",
                            FirstName = "Иван",
                            LastName = "Иванов",
                            Phone = "111-11-11"
                        },
                        new
                        {
                            Id = 2,
                            DateBirth = new DateTime(1986, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentName = "Заместитель директора",
                            FirstName = "Сергей",
                            LastName = "Петров",
                            Phone = "111-11-11"
                        });
                });

            modelBuilder.Entity("HomeProject.Models.Family", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Yearbirth")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Families");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Жена - Иванова Марина",
                            EmployeeId = 1,
                            Yearbirth = "1975"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Сын - Иванов Сергей",
                            EmployeeId = 1,
                            Yearbirth = "1999"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Жена - Петрова Ирина",
                            EmployeeId = 2,
                            Yearbirth = "1986"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Дочь - Метрова Таня",
                            EmployeeId = 2,
                            Yearbirth = "1995"
                        });
                });

            modelBuilder.Entity("HomeProject.Models.WorkHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            EndDate = new DateTime(2006, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2005, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkName = "СШ №1 Учитель информатики"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            EndDate = new DateTime(2015, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2006, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkName = "СШ №2 Завуч"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            EndDate = new DateTime(2006, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2005, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkName = "СШ №15 Учитель физики"
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 2,
                            EndDate = new DateTime(2015, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2006, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkName = "СШ №100 Директор"
                        });
                });

            modelBuilder.Entity("HomeProject.Models.Family", b =>
                {
                    b.HasOne("HomeProject.Models.Employee", "Employee")
                        .WithMany("Family")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HomeProject.Models.WorkHistory", b =>
                {
                    b.HasOne("HomeProject.Models.Employee", "Employee")
                        .WithMany("WorkHistory")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HomeProject.Models.Employee", b =>
                {
                    b.Navigation("Family");

                    b.Navigation("WorkHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
